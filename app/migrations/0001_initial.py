# Generated by Django 4.2.8 on 2024-02-28 10:13

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="BlockChain",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.IntegerField()),
                ("timestamp", models.TextField()),
                ("maSinhVien", models.TextField()),
                ("maThanhToan", models.TextField()),
                ("soTien", models.BigIntegerField()),
                ("noiDung", models.TextField()),
                ("soGiaoDich", models.BigIntegerField()),
                ("ketQua", models.TextField()),
                ("previous_hash", models.CharField(max_length=256)),
                ("hash", models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name="DanhMucThuChi",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tenKhoan", models.CharField(max_length=100)),
                ("isKhoanThu", models.BooleanField(blank=True)),
                ("isKhoanChi", models.BooleanField(blank=True)),
                ("isKhoanThuNhapHoc", models.BooleanField(blank=True)),
                ("isHocPhi", models.BooleanField(blank=True)),
                ("isThuTrucTuyen", models.BooleanField(blank=True)),
                ("ngayThem", models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="HeDaoTao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tenHeDaoTao", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Khoa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tenKhoa", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="KhoaHoc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("namKhoaHoc", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Lop",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lop", models.CharField(max_length=100)),
                (
                    "heDaoTao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.hedaotao"
                    ),
                ),
                (
                    "khoa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.khoa"
                    ),
                ),
                (
                    "khoaHoc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.khoahoc"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NamHoc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("namHoc", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Payment_VNPay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_id", models.IntegerField(blank=True, default=0, null=True)),
                ("amount", models.FloatField(blank=True, default=0.0, null=True)),
                ("order_desc", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "vnp_TransactionNo",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "vnp_ResponseCode",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ThietLapMucHocPhi",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("heDaoTao", models.CharField(max_length=100)),
                ("namHoc", models.CharField(max_length=100)),
                ("tenNganh", models.CharField(max_length=100)),
                ("khoa", models.CharField(max_length=100)),
                ("lop", models.CharField(max_length=100)),
                ("ngayThem", models.DateTimeField(auto_now_add=True, null=True)),
                ("isNganhHai", models.BooleanField(blank=True)),
                ("isHocLai", models.BooleanField(blank=True)),
                ("isMonGDTC", models.BooleanField(blank=True)),
                ("isChatLuongCao", models.BooleanField(blank=True)),
                ("isMienGiam", models.BooleanField(blank=True)),
                ("hocKy", models.BooleanField(blank=True)),
                ("tinhChat", models.CharField(max_length=100)),
                ("heSo", models.IntegerField(blank=True)),
                ("soTien", models.BigIntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="SinhVien",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("maSV", models.CharField(max_length=10)),
                ("hoTen", models.CharField(max_length=100)),
                ("ngaySinh", models.DateField(blank=True, null=True)),
                ("queQuan", models.CharField(max_length=100)),
                ("trangThai", models.BooleanField(blank=True)),
                (
                    "lop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.lop"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NganhDaoTao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tenNganhDaoTao", models.CharField(max_length=100)),
                (
                    "heDaoTao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.hedaotao"
                    ),
                ),
                (
                    "khoa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.khoa"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="lop",
            name="nganhDaoTao",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.nganhdaotao"
            ),
        ),
        migrations.CreateModel(
            name="KhoanThuNhapHoc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dotNhapHoc", models.IntegerField()),
                ("soTien", models.BigIntegerField()),
                (
                    "khoaHoc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.khoahoc"
                    ),
                ),
                (
                    "khoanThu",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.danhmucthuchi",
                    ),
                ),
                (
                    "nganhDaoTao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.nganhdaotao",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="KhoanThuHocPhi",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hanNop", models.DateField(blank=True, null=True)),
                ("noiDungThu", models.CharField(blank=True, max_length=100, null=True)),
                ("ghiChu", models.CharField(blank=True, max_length=100, null=True)),
                ("maSoThue", models.CharField(max_length=10)),
                ("soTienMienGiam", models.BigIntegerField()),
                ("soTien", models.BigIntegerField()),
                ("ngayThem", models.DateTimeField(auto_now_add=True, null=True)),
                ("trangThai", models.BooleanField(blank=True)),
                (
                    "mucHocPhi",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.thietlapmuchocphi",
                    ),
                ),
                (
                    "sinhVien",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.sinhvien"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="KeHoachThu",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dotThu", models.IntegerField()),
                ("trangThai", models.BooleanField(blank=True, null=True)),
                ("soTien", models.BigIntegerField()),
                ("ngayBatDau", models.DateField(blank=True, null=True)),
                ("ngayKetThuc", models.DateField(blank=True, null=True)),
                ("noiDung", models.TextField()),
                (
                    "khoaHoc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.khoahoc"
                    ),
                ),
                (
                    "khoanThu",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.danhmucthuchi",
                    ),
                ),
                (
                    "nganhDaoTao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.nganhdaotao",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChiTraHocPhi",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("soTienDaNop", models.BigIntegerField()),
                ("ngayThem", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "khoanThuHocPhi",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.khoanthuhocphi",
                    ),
                ),
                (
                    "sinhVien",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.sinhvien"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("admin", "Admin"), ("user", "User")], max_length=10
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
